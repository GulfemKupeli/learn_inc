import 'package:flutter/material.dart';
import 'package:animate_do/animate_do.dart';

import 'dart:math' as math;

class DashboardScreen extends StatefulWidget {
  @override
  _DashboardScreenState createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen>
    with TickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _animation;
  int points = 0;
  int lives = 3;
  int streakDays = 5; // Example streak days, replace with dynamic logic
  bool isDayMode = true; // Day-Night mode toggle

  final List<Map<String, dynamic>> gridOptions = [
    {'title': 'Load a File', 'icon': Icons.upload_file, 'onTap': () {}},
    {'title': 'Chat', 'icon': Icons.chat, 'onTap': () {}},
    {'title': 'Learn', 'icon': Icons.lightbulb, 'onTap': () {}},
  ];

  @override
  void initState() {
    super.initState();

    _controller = AnimationController(
      vsync: this,
      duration: Duration(seconds: 2),
    )..repeat(reverse: true);

    _animation = Tween<double>(begin: 0.0, end: -10.0).animate(
      CurvedAnimation(parent: _controller, curve: Curves.easeInOut),
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  void toggleTheme() {
    setState(() {
      isDayMode = !isDayMode;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: isDayMode ? Color(0xffFFC3A6) : Color(0xFF37474F),
      body: Stack(
        children: [
          // Top Bar Wave
          Positioned(
            top: 0,
            left: 0,
            right: 0,
            child: CustomPaint(
              size: Size(double.infinity, 100),
              painter: WavePainter(isDayMode: isDayMode),
            ),
          ),
          Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              // Top Bar with Points and Lives
              SafeArea(
                child: Padding(
                  padding: const EdgeInsets.symmetric(horizontal: 16.0),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Row(
                        children: [
                          // Points Display
                          Row(
                            children: [
                              Image.asset('assets/shrimp_icon.png', height: 24),
                              SizedBox(width: 4),
                              Text('$points',
                                  style: TextStyle(
                                      color: isDayMode
                                          ? Colors.black
                                          : Colors.white)),
                            ],
                          ),
                          SizedBox(width: 16),
                          // Lives Display
                          Row(
                            children: [
                              Image.asset('assets/heart_icon.png', height: 24),
                              SizedBox(width: 4),
                              Text('$lives',
                                  style: TextStyle(
                                      color: isDayMode
                                          ? Colors.black
                                          : Colors.white)),
                            ],
                          ),
                        ],
                      ),
                      // Profile Icon
                      IconButton(
                        icon: Icon(Icons.person,
                            color: isDayMode ? Colors.black : Colors.white),
                        onPressed: () {
                          showModalBottomSheet(
                            context: context,
                            builder: (context) => Container(
                              color: isDayMode
                                  ? Colors.white
                                  : Color(0xFF263238), // Adjust color
                              padding: EdgeInsets.all(16),
                              child: Column(
                                mainAxisSize: MainAxisSize.min,
                                children: [
                                  CircleAvatar(
                                    radius: 40,
                                    backgroundImage:
                                        AssetImage('assets/profile_picture.png'),
                                  ),
                                  SizedBox(height: 10),
                                  Text(
                                    'John Doe',
                                    style: TextStyle(
                                      fontSize: 18,
                                      color: isDayMode
                                          ? Colors.black
                                          : Colors.white,
                                    ),
                                  ),
                                  ListTile(
                                    leading: Icon(
                                      Icons.settings,
                                      color: isDayMode
                                          ? Colors.black
                                          : Colors.white,
                                    ),
                                    title: Text(
                                      'Settings',
                                      style: TextStyle(
                                        color: isDayMode
                                            ? Colors.black
                                            : Colors.white,
                                      ),
                                    ),
                                    onTap: () {},
                                  ),
                                  ListTile(
                                    leading: Icon(
                                      isDayMode
                                          ? Icons.wb_sunny
                                          : Icons.nights_stay,
                                      color: isDayMode
                                          ? Colors.black
                                          : Colors.white,
                                    ),
                                    title: Text(
                                      isDayMode
                                          ? 'Switch to Night Mode'
                                          : 'Switch to Day Mode',
                                      style: TextStyle(
                                        color: isDayMode
                                            ? Colors.black
                                            : Colors.white,
                                      ),
                                    ),
                                    onTap: () {
                                      toggleTheme();
                                      Navigator.pop(context);
                                    },
                                  ),
                                  ListTile(
                                    leading: Icon(
                                      Icons.logout,
                                      color: isDayMode
                                          ? Colors.black
                                          : Colors.white,
                                    ),
                                    title: Text(
                                      'Log Out',
                                      style: TextStyle(
                                        color: isDayMode
                                            ? Colors.black
                                            : Colors.white,
                                      ),
                                    ),
                                    onTap: () {},
                                  ),
                                ],
                              ),
                            ),
                          );
                        },
                      ),
                    ],
                  ),
                ),
              ),
              // Animated Mascot
              AnimatedBuilder(
                animation: _animation,
                builder: (context, child) {
                  return Transform.translate(
                    offset: Offset(0, _animation.value),
                    child: Image.asset(
                      'assets/octopus.png',
                      height: 150,
                      fit: BoxFit.cover,
                    ),
                  );
                },
              ),
              // Streak Display
              Column(
                children: [
                  Image.asset(
                    'assets/streak_icon.png',
                    height: 50,
                  ),
                  SizedBox(height: 8),
                  Text(
                    '$streakDays Days Streak',
                    style: TextStyle(
                      fontSize: 14,
                      fontWeight: FontWeight.w500,
                      color: isDayMode
                          ? Colors.grey[600]
                          : Colors.grey[300], // Adjust for theme
                    ),
                  ),
                ],
              ),
              // Grid Options with a Card-like Background
              FadeInUp(
                duration: Duration(milliseconds: 1000),
                child: Container(
                  padding: EdgeInsets.symmetric(horizontal: 24, vertical: 32),
                  width: double.infinity,
                  decoration: BoxDecoration(
                    color: isDayMode ? Colors.white : Colors.black54,
                    borderRadius: BorderRadius.only(
                      topLeft: Radius.circular(60),
                      topRight: Radius.circular(60),
                    ),
                    boxShadow: [
                      BoxShadow(
                        color: isDayMode
                            ? Colors.grey.withOpacity(0.3)
                            : Colors.black45,
                        offset: Offset(0, -5),
                        blurRadius: 20,
                      ),
                    ],
                  ),
                  child: Column(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      // Grid Options
                      GridView.builder(
                        shrinkWrap: true,
                        physics: NeverScrollableScrollPhysics(),
                        gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                          crossAxisCount: 3,
                          childAspectRatio: 1.2,
                        ),
                        itemCount: gridOptions.length,
                        itemBuilder: (context, index) {
                          return Column(
                            children: [
                              Icon(
                                gridOptions[index]['icon'],
                                size: 40,
                                color: isDayMode
                                    ? Color(0xffFFC3A6)
                                    : Colors.grey[300],
                              ),
                              SizedBox(height: 8),
                              Text(
                                gridOptions[index]['title'],
                                style: TextStyle(
                                  fontSize: 14,
                                  fontWeight: FontWeight.w600,
                                  color: isDayMode
                                      ? Colors.grey[800]
                                      : Colors.grey[400],
                                ),
                              ),
                            ],
                          );
                        },
                      ),
                      SizedBox(height: 16),
                      // Market Button
                      ElevatedButton(
                        onPressed: () {
                          // Your onPressed logic here
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor:
                              isDayMode ? Colors.grey : Colors.grey[700],
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(30),
                          ),
                          padding: EdgeInsets.symmetric(vertical: 16),
                        ),
                        child: Text(
                          'Market',
                          style: TextStyle(
                            fontSize: 16,
                            color: Colors.white,
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          ),
        ],
      ),
    );
  }
}

class WavePainter extends CustomPainter {
  final bool isDayMode;

  WavePainter({required this.isDayMode});

  @override
  void paint(Canvas canvas, Size size) {
    Paint paint = Paint()
      ..color = isDayMode ? Color(0xFF80DEEA) : Color(0xFF263238)
      ..style = PaintingStyle.fill;

    Path path = Path();
    path.lineTo(0, size.height * 0.75);
    path.quadraticBezierTo(size.width * 0.25, size.height, size.width * 0.5,
        size.height * 0.75);
    path.quadraticBezierTo(size.width * 0.75, size.height * 0.5, size.width,
        size.height * 0.75);
    path.lineTo(size.width, 0);
    path.close();

    canvas.drawPath(path, paint);
  }

  @override
  bool shouldRepaint(covariant CustomPainter oldDelegate) {
    return false;
  }
}
