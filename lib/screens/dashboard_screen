import 'package:flutter/material.dart';
import 'package:animate_do/animate_do.dart';

import 'dart:math' as math;

class DashboardScreen extends StatefulWidget {
  @override
  _DashboardScreenState createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen>
    with TickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _animation;
  int points = 0;
  int lives = 3;
  int streakDays = 5; // Example streak days, replace with dynamic logic

  final List<Map<String, dynamic>> gridOptions = [
    {'title': 'Load a File', 'icon': Icons.upload_file, 'onTap': () {}},
    {'title': 'Chat', 'icon': Icons.chat, 'onTap': () {}},
    {'title': 'Learn', 'icon': Icons.lightbulb, 'onTap': () {}},
  ];

  @override
  void initState() {
    super.initState();

    _controller = AnimationController(
      vsync: this,
      duration: Duration(seconds: 2),
    )..repeat(reverse: true);

    _animation = Tween<double>(begin: 0.0, end: -10.0).animate(
      CurvedAnimation(parent: _controller, curve: Curves.easeInOut),
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Color(0xffFFC3A6), // Light pastel background
      body: Column(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          // Top Bar with Points and Lives
          SafeArea(
            child: Padding(
              padding: const EdgeInsets.symmetric(horizontal: 16.0),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Row(
                    children: [
                      // Points Display
                      Row(
                        children: [
                          Image.asset('assets/shrimp_icon.png', height: 24),
                          SizedBox(width: 4),
                          Text('$points', style: TextStyle(color: Colors.black)),
                        ],
                      ),
                      SizedBox(width: 16),
                      // Lives Display
                      Row(
                        children: [
                          Image.asset('assets/heart_icon.png', height: 24),
                          SizedBox(width: 4),
                          Text('$lives', style: TextStyle(color: Colors.black)),
                        ],
                      ),
                    ],
                  ),
                  // Profile Icon
                  IconButton(
                    icon: Icon(Icons.person, color: Colors.black),
                    onPressed: () {
                      showModalBottomSheet(
                        context: context,
                        builder: (context) => Container(
                          padding: EdgeInsets.all(16),
                          child: Column(
                            mainAxisSize: MainAxisSize.min,
                            children: [
                              CircleAvatar(
                                radius: 40,
                                backgroundImage:
                                    AssetImage('assets/profile_picture.png'),
                              ),
                              SizedBox(height: 10),
                              Text('John Doe', style: TextStyle(fontSize: 18)),
                              ListTile(
                                leading: Icon(Icons.settings),
                                title: Text('Settings'),
                                onTap: () {},
                              ),
                              ListTile(
                                leading: Icon(Icons.logout),
                                title: Text('Log Out'),
                                onTap: () {},
                              ),
                            ],
                          ),
                        ),
                      );
                    },
                  ),
                ],
              ),
            ),
          ),
          // Animated Mascot
          AnimatedBuilder(
            animation: _animation,
            builder: (context, child) {
              return Transform.translate(
                offset: Offset(0, _animation.value),
                child: Image.asset(
                  'assets/octopus.png',
                  height: 150,
                  fit: BoxFit.cover,
                ),
              );
            },
          ),
          // Streak Display
          Column(
            children: [
              Image.asset(
                'assets/streak_icon.png',
                height: 50,
              ),
              SizedBox(height: 8),
              Text(
                '$streakDays Days Streak',
                style: TextStyle(
                  fontSize: 14,
                  fontWeight: FontWeight.w500,
                  color: Colors.grey[600], // Light gray for subtlety
                ),
              ),
            ],
          ),
          // Grid Options with a Card-like Background
          FadeInUp(
            duration: Duration(milliseconds: 1000),
            child: Container(
              padding: EdgeInsets.symmetric(horizontal: 24, vertical: 32),
              width: double.infinity,
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.only(
                  topLeft: Radius.circular(60),
                  topRight: Radius.circular(60),
                ),
                boxShadow: [
                  BoxShadow(
                    color: Colors.grey.withOpacity(0.3),
                    offset: Offset(0, -5),
                    blurRadius: 20,
                  ),
                ],
              ),
              child: Column(
                mainAxisSize: MainAxisSize.min,
                children: [
                  // Grid Options
                  GridView.builder(
                    shrinkWrap: true,
                    physics: NeverScrollableScrollPhysics(),
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: 3,
                      childAspectRatio: 1.2,
                    ),
                    itemCount: gridOptions.length,
                    itemBuilder: (context, index) {
                      return Column(
                        children: [
                          Icon(
                            gridOptions[index]['icon'],
                            size: 40,
                            color: Color(0xffFFC3A6),
                          ),
                          SizedBox(height: 8),
                          Text(
                            gridOptions[index]['title'],
                            style: TextStyle(
                              fontSize: 14,
                              fontWeight: FontWeight.w600,
                              color: Colors.grey[800],
                            ),
                          ),
                        ],
                      );
                    },
                  ),
                  SizedBox(height: 16),
                  // Explore Button
                  ElevatedButton(
                    onPressed: () {
                      // Your onPressed logic here
                    },
                    style: ElevatedButton.styleFrom(
                      backgroundColor: Colors.black,
                      shape: RoundedRectangleBorder(
                        borderRadius: BorderRadius.circular(30),
                      ),
                      padding: EdgeInsets.symmetric(vertical: 16),
                    ),
                    child: Text(
                      'Explore Now',
                      style: TextStyle(fontSize: 16, color: Colors.white),
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}
