import 'package:flutter/material.dart';
import 'dart:math' as math;

class DashboardScreen extends StatefulWidget {
  @override
  _DashboardScreenState createState() => _DashboardScreenState();
}

class _DashboardScreenState extends State<DashboardScreen>
    with TickerProviderStateMixin {
  late AnimationController _controller;
  late Animation<double> _animation;
  bool multiple = true; // Toggle grid layout
  int points = 0;
  int lives = 0;

  final List<Map<String, dynamic>> gridOptions = [
    {'title': 'Load a File', 'icon': Icons.upload_file, 'onTap': () {}},
    {'title': 'Chat', 'icon': Icons.chat, 'onTap': () {}},
    {'title': 'Learn', 'icon': Icons.lightbulb, 'onTap': () {}},
  ];

  @override
  void initState() {
    super.initState();

    _controller = AnimationController(
      vsync: this,
      duration: Duration(seconds: 2),
    )..repeat(reverse: true);

    _animation = Tween<double>(begin: 0.0, end: -20.0).animate(
      CurvedAnimation(parent: _controller, curve: Curves.easeInOut),
    );
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  Widget buildGridItem(Map<String, dynamic> option, Animation<double> animation) {
    return FadeTransition(
      opacity: animation,
      child: Transform(
        transform: Matrix4.translationValues(
          0.0,
          50 * (1.0 - animation.value),
          0.0,
        ),
        child: AspectRatio(
          aspectRatio: 1.5,
          child: ClipRRect(
            borderRadius: const BorderRadius.all(Radius.circular(12.0)),
            child: Stack(
              alignment: AlignmentDirectional.center,
              children: <Widget>[
                Container(
                  color: Colors.white.withOpacity(0.1),
                ),
                Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    Icon(option['icon'], size: 40, color: Colors.white),
                    SizedBox(height: 8),
                    Text(
                      option['title'],
                      style: TextStyle(color: Colors.white),
                    ),
                  ],
                ),
                Material(
                  color: Colors.transparent,
                  child: InkWell(
                    splashColor: Colors.grey.withOpacity(0.2),
                    borderRadius: BorderRadius.all(Radius.circular(12.0)),
                    onTap: option['onTap'],
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Stack(
        children: [
          // Background
          Positioned.fill(
            child: Image.asset(
              'assets/dashboard_background.jpg',
              fit: BoxFit.cover,
            ),
          ),
          // Dim Effect
          Positioned.fill(
            child: Container(color: Colors.black.withOpacity(0.3)),
          ),
          // Top Bar with Points and Lives
          Positioned(
            top: MediaQuery.of(context).padding.top + 8,
            left: 16,
            right: 16,
            child: Row(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                // Points and Lives
                Row(
                  children: [
                    Row(
                      children: [
                        Image.asset('assets/shrimp_icon.png', height: 24),
                        SizedBox(width: 4),
                        Text('$points', style: TextStyle(color: Colors.white)),
                      ],
                    ),
                    SizedBox(width: 16),
                    Row(
                      children: [
                        Image.asset('assets/heart_icon.png', height: 24),
                        SizedBox(width: 4),
                        Text('$lives', style: TextStyle(color: Colors.white)),
                      ],
                    ),
                  ],
                ),
                // Profile Icon
                IconButton(
                  icon: Icon(Icons.person, color: Colors.white),
                  onPressed: () {
                    showModalBottomSheet(
                      context: context,
                      builder: (context) => Container(
                        padding: EdgeInsets.all(16),
                        child: Column(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            CircleAvatar(
                              radius: 40,
                              backgroundImage:
                                  AssetImage('assets/profile_picture.png'),
                            ),
                            SizedBox(height: 10),
                            Text('John Doe', style: TextStyle(fontSize: 18)),
                            ListTile(
                              leading: Icon(Icons.settings),
                              title: Text('Settings'),
                              onTap: () {},
                            ),
                            ListTile(
                              leading: Icon(Icons.logout),
                              title: Text('Log Out'),
                              onTap: () {},
                            ),
                          ],
                        ),
                      ),
                    );
                  },
                ),
              ],
            ),
          ),
          // Main Content
          Padding(
            padding: EdgeInsets.only(
              top: MediaQuery.of(context).padding.top + 80,
              left: 16,
              right: 16,
            ),
            child: Column(
              children: [
                // Animated Mascot
                AnimatedBuilder(
                  animation: _animation,
                  builder: (context, child) {
                    return Transform.translate(
                      offset: Offset(0, _animation.value),
                      child: child,
                    );
                  },
                  child: Image.asset(
                    'assets/octopus.png',
                    height: 120,
                  ),
                ),
                SizedBox(height: 16),
                // Grid Options
                Expanded(
                  child: GridView.builder(
                    gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                      crossAxisCount: multiple ? 2 : 1,
                      mainAxisSpacing: 12.0,
                      crossAxisSpacing: 12.0,
                      childAspectRatio: 1.2,
                    ),
                    itemCount: gridOptions.length,
                    itemBuilder: (context, index) {
                      final animation = Tween<double>(begin: 0.0, end: 1.0).animate(
                        CurvedAnimation(
                          parent: _controller,
                          curve: Interval((1 / gridOptions.length) * index, 1.0,
                              curve: Curves.easeInOut),
                        ),
                      );
                      return buildGridItem(gridOptions[index], animation);
                    },
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }
}
